name: CI

on:
  schedule:
    - cron: '0 0 * * *' # run every day at midnight
  push:
    branches:
      - main
  merge_group:
  pull_request:
    branches:
      - main


jobs:
  test-latest:
    name: Test changed-files latest tag
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        fetch-depth: [0, 1, 2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ matrix.fetch-depth }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v43

      - run: |
          echo "id=$(git merge-base $GITHUB_EVENT_PULL_REQUEST_BASE_SHA $GITHUB_SHA)" >> $GITHUB_OUTPUT
        env:
          GITHUB_EVENT_PULL_REQUEST_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_EVENT_PULL_REQUEST_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_SHA: ${{ github.sha }}
        shell: bash
        id: merge_base
        if: always()

      - run: |
           echo "The merge base of the current branch and the base branch is: ${{ steps.merge_base.outputs.id }}"
        shell: bash
        if: always()

      - name: Show output
        run: |
          echo '${{ toJSON(steps.changed-files.outputs) }}'
        shell:
          bash

      - name: Get changed files in the .github folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v43
        with:
          files: .github/**

      - name: Run step if any file(s) in the .github folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the .github folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"

  test-main:
    name: Test changed-files main
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        fetch-depth: [0, 1, 2]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ matrix.fetch-depth }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - run: git remote -v

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@main

      - run: |
          git fetch --no-tags --prune --no-recurse-submodules -u --progress --deepen=1 origin "$GITHUB_EVENT_PULL_REQUEST_BASE_REF:$GITHUB_EVENT_PULL_REQUEST_BASE_REF" 1>/dev/null
          git fetch --no-tags --prune --no-recurse-submodules -u --progress origin pull/"$GITHUB_EVENT_PULL_REQUEST_NUMBER"/head:"$GITHUB_EVENT_PULL_REQUEST_HEAD_REF" 1>/dev/null
          BASE_REF_SHA=$(git rev-parse main)

          if ! git merge-base "$BASE_REF_SHA" "$GITHUB_SHA"; then
            echo "Merge base is not in the local history, fetching remote target branch..."
            for i in {1..10}; do
              git fetch --no-tags --prune --no-recurse-submodules -u --progress --deepen=50 origin "$GITHUB_EVENT_PULL_REQUEST_BASE_REF:$GITHUB_EVENT_PULL_REQUEST_BASE_REF" 1>/dev/null
              if git merge-base "$BASE_REF_SHA" "$CURRENT_SHA"; then
                break
              fi
              echo "Merge base is not in the local history, fetching remote target branch again..."
              echo "Attempt $i/10"
            done
          fi

          echo "id=$(git merge-base $BASE_REF_SHA $GITHUB_SHA)" >> $GITHUB_OUTPUT
          git diff --name-only --ignore-submodules=all "$BASE_REF_SHA"..."$GITHUB_SHA"
        env:
          GITHUB_EVENT_PULL_REQUEST_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_EVENT_PULL_REQUEST_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GITHUB_EVENT_PULL_REQUEST_BASE_REF: ${{ github.event.pull_request.base.ref }}
          GITHUB_EVENT_PULL_REQUEST_HEAD_REF: ${{ github.event.pull_request.head.ref }}
          GITHUB_EVENT_PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_SHA: ${{ github.sha }}
        shell: bash
        id: merge_base

      - run: |
          echo "The merge base of the current branch and the base branch is: ${{ steps.merge_base.outputs.id }}"
        shell: bash
        if: always()

      - name: Show output
        run: |
          echo '${{ toJSON(steps.changed-files.outputs) }}'
        shell:
          bash

      - name: Get changed files in the .github folder
        id: changed-files-specific
        uses: tj-actions/changed-files@main
        with:
          files: .github/**

      - name: Run step if any file(s) in the .github folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the .github folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
